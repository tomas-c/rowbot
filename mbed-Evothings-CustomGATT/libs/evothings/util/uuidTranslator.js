/**
 * File: uuidTranslator.js
 * Description: Utility to translate UUID's to human readable format.
 * Author: Austin Blackstone
 */
if (!window.evothings) { window.evothings = {} }
evothings.uuid = (function()
{
	var funs = {}
	var GATTservices = {
		0x1811:"Alert Notification Service",
		0x180F:"Battery Service",
		0x1810:"Blood Pressure",
		0x181B:"Body Composition",
		0x181E:"Bond Management",
		0x181F:"Continuous Glucose Monitoring",
		0x1805:"Current Time Service",
		0x1818:"Cycling Power",
		0x1816:"Cycling Speed and Cadence",
		0x180A:"Device Information",
		0x181A:"Environmental Sensing",
		0x1800:"Generic Access (GAP)",
		0x1801:"Generic Attribute (GATT)",
		0x1808:"Glucose",
		0x1809:"Health Thermometer",
		0x180D:"Heart Rate",
		0x1812:"Human Interface Device",
		0x1802:"Immediate Alert",
		0x1820:"Internet Protocol Support",
		0x1803:"Link Loss",
		0x1819:"Location and Navigation",
		0x1807:"Next DST Change Service",
		0x180E:"Phone Alert Status Service",
		0x1806:"Reference Time Update Service",
		0x1814:"Running Speed and Cadence",
		0x1813:"Scan Parameters",
		0x1804:"Tx Power",
		0x181C:"User Data",
		0x181D:"Weight Scale"	
	}
	
	var Characteristics = {
		0x2A7E:"Aerobic Heart Rate Lower Limit",
		0x2A84:"Aerobic Heart Rate Upper Limit",
		0x2A7F:"Aerobic Threshold",
		0x2A80:"Age",
		0x2A43:"Alert Category ID",
		0x2A42:"Alert Category ID Bit Mask",
		0x2A06:"Alert Level",
		0x2A44:"Alert Notification Control Point",
		0x2A3F:"Alert Status",
		0x2A81:"Anaerobic Heart Rate Lower Limit",
		0x2A82:"Anaerobic Heart Rate Upper Limit",
		0x2A83:"Anaerobic Threshold",
		0x2A73:"Apparent Wind Direction",
		0x2A72:"Apparent Wind Speed",
		0x2A01:"Appearance",
		0x2AA3:"Barometric Pressure Trend",
		0x2A19:"Battery Level",
		0x2A49:"Blood Pressure Feature",
		0x2A35:"Blood Pressure Measurement",
		0x2A9B:"Body Composition Feature",
		0x2A9C:"Body Composition Measurement",
		0x2A38:"Body Sensor Location",
		0x2AA4:"Bond Management Control Point",
		0x2AA5:"Bond Management Feature",
		0x2A22:"Boot Keyboard Input Report",
		0x2A32:"Boot Keyboard Output Report",
		0x2A33:"Boot Mouse Input Report",
		0x2AA6:"Central Address Resolution",
		0x2AA8:"CGM Feature",
		0x2AA7:"CGM Measurement",
		0x2AAB:"CGM Session Run Time",
		0x2AAA:"CGM Session Start Time",
		0x2AAC:"CGM Specific Ops Control Point",
		0x2AA9:"CGM Status",
		0x2A5C:"CSC Feature",
		0x2A5B:"CSC Measurement",
		0x2A2B:"Current Time",
		0x2A66:"Cycling Power Control",
		0x2A65:"Cycling Power Feature",
		0x2A63:"Cycling Power",
		0x2A64:"Cycling Power Vector",
		0x2A99:"Database Change Increment",
		0x2A85:"Date of Birth",
		0x2A86:"Date of Threshold Assessment",
		0x2A08:"Date Time",
		0x2A0A:"Day Date Time",
		0x2A09:"Day of Week",
		0x2A7D:"Descriptor Value Changed",
		0x2A00:"Device Name",
		0x2A7B:"Dew Point",
		0x2A0D:"DST Offset",
		0x2A6C:"Elevation",
		0x2A87:"Email Address",
		0x2A0C:"Exact Time 256",
		0x2A88:"Fat Burn Heart Rate Lower Limit",
		0x2A89:"Fat Burn Heart Rate Upper Limit",
		0x2A26:"Firmware Revision String",
		0x2A8A:"First Name",
		0x2A8B:"Five Zone Heart Rate Limits",
		0x2A8C:"Gender",
		0x2A51:"Glucose Feature",
		0x2A18:"Glucose Measurement",
		0x2A34:"Glucose Measurement Context",
		0x2A74:"Gust Factor",
		0x2A27:"Hardware Revision String",
		0x2A39:"Heart Rate Control Point",
		0x2A8D:"Heart Rate Max",
		0x2A37:"Heart Rate Measurement",
		0x2A7A:"Heat Index",
		0x2A8E:"Height",
		0x2A4C:"HID Control Point",
		0x2A4A:"HID Information",
		0x2A8F:"Hip Circumference",
		0x2A6F:"Humidity",
		0x2A2A:"IEEE 11073-20601 Regulatory Certification Data List	",
		0x2A36:"Intermediate Cuff Pressure",
		0x2A1E:"Intermediate Temperature",
		0x2A77:"Irradiance",
		0x2AA2:"Language",
		0x2A90:"Last Name",
		0x2A6B:"LN Control",
		0x2A6A:"LN Feature",
		0x2A0F:"Local Time Information",
		0x2A67:"Location and",
		0x2A2C:"Magnetic Declination",
		0x2AA0:"Magnetic Flux Density - 2D",
		0x2AA1:"Magnetic Flux Density - 3D",
		0x2A29:"Manufacturer Name String",
		0x2A91:"Maximum Recommended Heart Rate",
		0x2A21:"Measurement Interval",
		0x2A24:"Model Number String",
		0x2A68:"Navigation",
		0x2A46:"New Alert",
		0x2A04:"Peripheral Preferred Connection Parameters",
		0x2A02:"Peripheral Privacy Flag",
		0x2A50:"PnP ID",
		0x2A75:"Pollen Concentration",
		0x2A69:"Position",
		0x2A6D:"Pressure",
		0x2A4E:"Protocol Mode"
	}
	
	var descriptors = {
	
		0x2900 :"Characteristic Extended Properties",
		0x2901 :"Characteristic User Description",
		0x2902 :"Client Characteristic Configuration",
		0x2903 :"Server Characteristic Configuration",
		0x2904 :"Characteristic Presentation Format",
		0x2905 :"Characteristic Aggregate Format",
		0x2906 :"Valid Range",
		0x2907 :"External Report Reference",
		0x2908 :"Report Reference",
		0x290B :"Environmental Sensing Configuration",
		0x290C :"Environmental Sensing Measurement",
		0x290D :"Environmental Sensing Trigger"
	}
	
	var declaration = {
		0x2803:"GATT Characteristic Declaration",
		0x2802:"GATT Include Declaration",
		0x2801:"GATT Secondary Service Declaration",
		0x2800:"GATT Primary Service Declaration"
	}
	
	var unit = {
		0x2700:"unitless",
		0x2701:"length (metre)",
		0x2702:"mass (kilogram)",
		0x2703:"time (second)",
		0x2704:"electric current (ampere)",
		0x2705:"thermodynamic temperature (kelvin)",
		0x2706:"amount of substance (mole)",
		0x2707:"luminous intensity (candela)",
		0x2710:"area (square metres)",
		0x2711:"volume (cubic metres)",
		0x2712:"velocity (metres per second)",
		0x2713:"acceleration (metres per second squared)",
		0x2714:"wavenumber (reciprocal metre)",
		0x2715:"density (kilogram per cubic metre)",
		0x2716:"surface density (kilogram per square metre)",
		0x2717:"specific volume (cubic metre per kilogram)",
		0x2718:"current density (ampere per square metre)",
		0x2719:"magnetic field strength (ampere per metre)",
		0x271A:"amount concentration (mole per cubic metre)",
		0x271B:"mass concentration (kilogram per cubic metre)",
		0x271C:"luminance (candela per square metre)",
		0x271D:"refractive index",
		0x271E:"relative permeability",
		0x2720:"plane angle (radian)",
		0x2721:"solid angle (steradian)",
		0x2722:"frequency (hertz)",
		0x2723:"force (newton)",
		0x2724:"pressure (pascal)",
		0x2725:"energy (joule)",
		0x2726:"power (watt)",
		0x2727:"electric charge (coulomb)",
		0x2728:"electric potential difference (volt)",
		0x2729:"capacitance (farad)",
		0x272A:"electric resistance (ohm)",
		0x272B:"electric conductance (siemens)",
		0x272C:"magnetic flux (weber)",
		0x272D:"magnetic flux density (tesla)",
		0x272E:"inductance (henry)",
		0x272F:"Celsius temperature (degree Celsius)",
		0x2730:"luminous flux (lumen)",
		0x2731:"illuminance (lux)",
		0x2732:"activity referred to a radionuclide (becquerel)",
		0x2733:"absorbed dose (gray)",
		0x2734:"dose equivalent (sievert)",
		0x2735:"catalytic activity (katal)",
		0x2740:"dynamic viscosity (pascal second)",
		0x2741:"moment of force (newton metre)",
		0x2742:"surface tension (newton per metre)",
		0x2743:"angular velocity (radian per second)",
		0x2744:"angular acceleration (radian per second squared)",
		0x2745:"heat flux density (watt per square metre)",
		0x2746:"heat capacity (joule per kelvin)",
		0x2747:"specific heat capacity (joule per kilogram kelvin)",
		0x2748:"specific energy (joule per kilogram)",
		0x2749:"thermal conductivity (watt per metre kelvin)",
		0x274A:"energy density (joule per cubic metre)",
		0x274B:"electric field strength (volt per metre)",
		0x274C:"electric charge density (coulomb per cubic metre)",
		0x274D:"surface charge density (coulomb per square metre)",
		0x274E:"electric flux density (coulomb per square metre)",
		0x274F:"permittivity (farad per metre)",
		0x2750:"permeability (henry per metre)",
		0x2751:"molar energy (joule per mole)",
		0x2752:"molar entropy (joule per mole kelvin)",
		0x2753:"exposure (coulomb per kilogram)",
		0x2754:"absorbed dose rate (gray per second)",
		0x2755:"radiant intensity (watt per steradian)",
		0x2756:"radiance (watt per square metre steradian)",
		0x2757:"catalytic activity concentration (katal per cubic metre)",
		0x2760:"time (minute)",
		0x2761:"time (hour)",
		0x2762:"time (day)",
		0x2763:"plane angle (degree)",
		0x2764:"plane angle (minute)",
		0x2765:"plane angle (second)",
		0x2766:"area (hectare)",
		0x2767:"volume (litre)",
		0x2768:"mass (tonne)",
		0x2780:"pressure (bar)",
		0x2781:"pressure (millimetre of mercury)",
		0x2782:"length (ångström)",
		0x2783:"length (nautical mile)",
		0x2784:"area (barn)",
		0x2785:"velocity (knot)",
		0x2786:"logarithmic radio quantity (neper)",
		0x2787:"logarithmic radio quantity (bel)",
		0x27A0:"length (yard)",
		0x27A1:"length (parsec)",
		0x27A2:"length (inch)",
		0x27A3:"length (foot)",
		0x27A4:"length (mile)",
		0x27A5:"pressure (pound-force per square inch)",
		0x27A6:"velocity (kilometre per hour)",
		0x27A7:"velocity (mile per hour)",
		0x27A8:"angular velocity (revolution per minute)",
		0x27A9:"energy (gram calorie)",
		0x27AA:"energy (kilogram calorie)",
		0x27AB:"energy (kilowatt hour)",
		0x27AC:"thermodynamic temperature (degree Fahrenheit)",
		0x27AD:"percentage",
		0x27AE:"per mille",
		0x27AF:"period (beats per minute)",
		0x27B0:"electric charge (ampere hours)",
		0x27B1:"mass density (milligram per decilitre)",
		0x27B2:"mass density (millimole per litre)",
		0x27B3:"time (year)",
		0x27B4:"time (month)",
		0x27B5:"concentration (count per cubic metre)",
		0x27B6:"irradiance (watt per square metre)",
		0x27B7:"milliliter (per kilogram per minute)",
		0x27B8:"mass (pound)"
	}
	
	var MasterList = $.extend({},GATTservices,Characteristics,descriptors,declaration,unit)
	//serviceUUID="00002a01-0000-1000-8000-00805f9b34fb"
	//MasterList[parseInt("0x"+serviceUUID.split("-")[0])]
	
	// break off first 4 bytes of UUID and convert to Hex number
	// Hex number is used as index into master list of UUID's
	funs.toIndex = function(serviceUUID){
		return "0x"+service.UUID.split(-)[0]
	}

	funs.translate = function(data)
	{
		return MasterList[evothings.uuid.toIndex(data)]
	}


	// Return object that holds functions.
	return funs
})()